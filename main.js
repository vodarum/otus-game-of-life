(()=>{"use strict";class t{isRunning=!1;constructor(e,i,s=1){this.gameField=e,this.gameView=i,this.speed=t.toCorrectSpeed(s),this.renderInitialState()}renderInitialState(){const t=this.gameField.getState();this.gameView.updateGameField(t),this.gameView.updateGameState({width:t[0].length,height:t.length,speed:this.speed}),this.bindCallbacks()}bindCallbacks(){this.gameView.onCellClick(this.toggleCell.bind(this)),this.gameView.onBtnNextClick(this.next.bind(this)),this.gameView.onBtnRandomClick(this.fillState.bind(this)),this.gameView.onBtnClearClick(this.fillState.bind(this,0)),this.gameView.onFieldSizeChange(this.changeFieldSize.bind(this)),this.gameView.onSpeedChange(this.changeSpeed.bind(this)),this.gameView.onGameStateChange(this.toggleIsRunning.bind(this))}changeFieldSize(t,e){this.gameField.setSize(t,e);const i=this.gameField.getState();this.gameView.updateGameField(i),this.gameView.updateGameState({width:i[0].length,height:i.length})}changeSpeed(t){this.speed=t,this.gameView.updateGameState({speed:t}),this.isRunning&&this.start()}fillState(t){this.gameField.fillState(t);const e=this.gameField.getState();this.gameView.updateGameField(e)}next(){const t=this.gameField.nextGeneration(),e=this.gameField.getState();this.gameView.updateGameField(e),this.isRunning&&this.toggleIsRunning(t),t||alert("Игра окончена!")}start(){clearTimeout(this.generatorId),this.generatorId=window.setTimeout((()=>{this.next()}),1e3*this.speed)}stop(){clearTimeout(this.generatorId)}toggleCell(t,e){const i=this.gameField.getState();this.gameField.toggleCellState(t,e),this.gameView.updateGameField(i)}toggleIsRunning(t){t?this.start():this.stop(),this.isRunning!==t&&(this.isRunning=t,this.gameView.updateGameState({isRunning:t}))}static toCorrectSpeed(t){return t<=0?(console.log("Speed must be greater than 0"),.1):t>5?(console.log("Speed should not be more than 5"),5):t}}class e{constructor(t,i){this.width=t,this.height=i,this.state=e.initState(t,i)}fillState(t){this.state=void 0===t?this.state.map((t=>t.map((t=>Math.round(Math.random()))))):this.state.map((e=>e.map((e=>t))))}getState(){return this.state}nextGeneration(){const t=[[]];for(let e=0;e<this.height;e++){t[e]=[];for(let i=0;i<this.width;i++){const s=this.getLivingNeighborCount(i,e);this.state[e][i]||3!==s?this.state[e][i]&&(s<2||s>3)?t[e][i]=0:t[e][i]=this.state[e][i]:t[e][i]=1}}return e.arraysEqual(this.state,t)||e.arrayIsEmpty(t)?(this.state=e.initState(this.width,this.height),!1):(this.state=t,!0)}setSize(t,e){this.width=t,this.height=e;const i=[[]];for(let s=0;s<e;s++){i[s]=[];for(let e=0;e<t;e++)i[s][e]=Array.isArray(this.state[s])?+!!this.state[s][e]:0}this.state=i}toggleCellState(t,e){this.state[e][t]=+!this.state[e][t]}checkIfOutsideField(t,e){return t<0||e<0||t>=this.width||e>=this.height}static arraysEqual(t,e){return JSON.stringify(t)===JSON.stringify(e)}static arrayIsEmpty(t){return!t.find((t=>t.find((t=>t))))}static initState(t,e){const i=[[]];for(let s=0;s<e;s++){i[s]=[];for(let e=0;e<t;e++)i[s][e]=0}return i}getLivingNeighborCount(t,e){let i=0;for(let s=-1;s<=1;s++)for(let a=-1;a<=1;a++){const[n,d]=[t+a,e+s];this.checkIfOutsideField(n,d)||n===t&&d===e||this.state[d][n]&&i++}return i}}class i{constructor(t){this.wrapper=t,this.init()}init(){const t=i.createGameTitle(),e=i.createGameField(),s=i.createGameControls();this.wrapper.classList.add("game"),this.wrapper.append(t,e,s)}updateGameField(t){const e=t[0].length,i=t.length,s=this.wrapper.querySelector(".game__field > table"),a=s;a.innerHTML="";let n=!0;for(let s=0;s<i;s++){const i=document.createElement("tr");for(let a=0;a<e;a++){const e=document.createElement("td");e.classList.add("cell"),e.classList.add(t[s][a]?"cell_alive":"cell_dead"),e.dataset.x=`${a}`,e.dataset.y=`${s}`,n&&t[s][a]&&(n=!1),i.append(e)}a.append(i)}s.innerHTML=a.innerHTML,this.toggleButtons(n)}toggleButtons(t){const e=this.wrapper.querySelectorAll(".buttons__item");Array.from(e).forEach((e=>{e.dataset.hasToggle&&(e.disabled=t)}))}updateGameState(t){void 0!==t.width&&void 0!==t.height&&this.updateControlsFieldSize(t.width,t.height),void 0!==t.speed&&this.updateControlsSpeed(t.speed),void 0!==t.isRunning&&this.updateBtnRun(t.isRunning)}updateControlsFieldSize(t,e){const i=this.wrapper.querySelector("#inputWidth"),s=this.wrapper.querySelector("#inputHeight");i.value=`${t}`,s.value=`${e}`}updateControlsSpeed(t){const e=this.wrapper.querySelector("#inputSpeed"),i=this.wrapper.querySelector(".speed__output");e.value=t.toFixed(1),i.innerHTML=`${t.toFixed(1)} s`}updateBtnRun(t){const e=this.wrapper.querySelector("#btnRun");t?(e.classList.remove("btn-run_play"),e.classList.add("btn-run_stop"),e.innerHTML="Stop"):(e.classList.remove("btn-run_stop"),e.classList.add("btn-run_play"),e.innerHTML="Play")}onCellClick(t){this.wrapper.querySelector(".game__field > table").addEventListener("click",(e=>{const i=e.target;i.classList.contains("cell")&&void 0!==i.dataset.x&&void 0!==i.dataset.y&&t(+i.dataset.x,+i.dataset.y)}))}onGameStateChange(t){const e=this.wrapper.querySelector("#btnRun");e.addEventListener("click",(()=>{t("Play"===e.innerHTML)}))}onBtnNextClick(t){this.onBtnClick("#btnNext",t)}onBtnRandomClick(t){this.onBtnClick("#btnRandom",t)}onBtnClearClick(t){this.onBtnClick("#btnClear",t)}onBtnClick(t,e){this.wrapper.querySelector(t).addEventListener("click",(()=>{e()}))}onSpeedChange(t){const e=this.wrapper.querySelector("#inputSpeed");e.addEventListener("input",(()=>{t(+e.value)}))}onFieldSizeChange(t){const e=this.wrapper.querySelector("#inputWidth"),i=this.wrapper.querySelector("#inputHeight");e.addEventListener("change",(()=>{t(+e.value,+i.value)})),i.addEventListener("change",(()=>{t(+e.value,+i.value)}))}static createGameTitle(){const t=document.createElement("h1");return t.classList.add("game__title"),t.innerHTML="OTUS Game of Life",t}static createGameField(){const t=document.createElement("div");t.classList.add("game__field");const e=document.createElement("table");return t.append(e),t}static createGameControls(){const t=document.createElement("div");t.classList.add("game__controls","controls");const e=i.createControlsButtons(),s=i.createControlsFieldSize(),a=i.createControlsSpeed();return t.append(e,s,a),t}static createControlsButtons(){const t=document.createElement("div");return t.classList.add("controls__item","buttons"),[{id:"btnRun",classes:["buttons__item","btn-run","btn-run_play"],text:"Play",disabled:!0},{id:"btnNext",classes:["buttons__item","btn-next"],text:"Next",disabled:!0},{id:"btnRandom",classes:["buttons__item","btn-random"],text:"Random"},{id:"btnClear",classes:["buttons__item","btn-clear"],text:"Clear",disabled:!0}].forEach((e=>{const i=document.createElement("button");i.id=e.id,i.classList.add(...e.classes),i.innerHTML=e.text,e.disabled&&(i.disabled=e.disabled,i.dataset.hasToggle="true"),t.append(i)})),t}static createControlsSpeed(){const t=document.createElement("div");t.classList.add("controls__item","speed");const e=document.createElement("label");e.classList.add("speed__label"),e.setAttribute("for","inputSpeed"),e.innerHTML="Speed: ";const i=document.createElement("input");i.classList.add("speed__input"),i.id="inputSpeed",i.type="range",i.step="0.1",i.value="0",i.max="5";const s=document.createElement("output");return s.classList.add("speed__output"),s.setAttribute("for","inputSpeed"),t.append(e,i,s),t}static createControlsFieldSize(){const t=document.createElement("div");return t.classList.add("controls__item","field-size"),["Width","Height"].forEach((e=>{const i=document.createElement("div");i.classList.add("field-size__param");const s=document.createElement("label");s.classList.add("field-size__label"),s.innerHTML=`${e}: `;const a=document.createElement("input");a.type="number",a.id=`input${e}`,a.classList.add("field-size__input",`field-size__input_${e.toLowerCase()}`),i.append(s,a),t.append(i)})),t}}const s=document.getElementById("app"),a=new i(s),n=new e(5,5);new t(n,a)})();
//# sourceMappingURL=main.js.map